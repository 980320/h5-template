name: Publish And Deploy  # 为这个 actions 命名，忽略此字段，则默认会设置为 workflow 文件名
on: # 此CI/CD触发时的事件
  push: # 在代码提交时自动触发，同样也可以指定在 打 tag、release、pull_request、定时、某个文件变动、仓库被start 时触发
    branches:
      - main

jobs: # CI 要执行的任务
  build-and-deploy: # 要执行任务的名字这个名字可以随便改 job1、job2... 都行
    runs-on: ubuntu-latest # 当前任务运行环境 目前支持 Windows、Ubuntu、MacOs
    steps: # 在 ubuntu-latest 下运行以下步骤

    # 下载源码
    # uses 的作用是使用另一个仓库的代码，如下
    # uses: actions/checkout@master 使用 actions 用户的 checkout 仓库的 master
    - name: Checkout # 步骤的名字，可以不写
      uses: actions/checkout@main # 下载仓库的代码

    # 打包构建
    - name: Build
      uses: actions/setup-node@master # 在当前系统下使用 node 环境，这里可以切换node 环境
    - run: pnpm install # run 为在系统在执行该命令
    - run: pnpm run build

    # 命名这个任务为发布Deploy
    # 注意这个步骤中使用的 secrets.xxx 变量都是在 GitHub 仓库中配置的,下文中有配置讲解
    - name: Deploy
      uses: cross-the-world/ssh-scp-ssh-pipelines@master # 使用 ssh 上传工具将代码上传至服务器
      env:
        WELCOME: "ssh scp ssh pipelines"
        LASTSSH: "Doing something after copying"
      with:
        host: ${{ secrets.HOST }}
        user: ${{ secrets.USERNAME }}
        pass: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        connect_timeout: 10s
        local: './dist/*'
        remote: /usr/share/nginx/html

